# ARMv8 build stage
FROM arm64v8/node:24.4.1-alpine3.21 AS build
RUN set -x \
  && apk --no-cache add shadow \
  && groupmod -g 1001 node \
  && usermod -u 1001 -g 1001 node \
  && addgroup --gid 1000 app \
  && adduser --disabled-password \
      --gecos '' \
      --ingroup app \
      --home /app \
      --uid 1000 \
      app

COPY --chown=app:app . /app
USER app
WORKDIR /app
RUN set -x \
  && PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true npm ci \
  && npm run build

# ARMv8 production image
FROM arm64v8/node:24.4.1-alpine3.21
RUN set -x \
  && apk --no-cache add shadow \
  && groupmod -g 1001 node \
  && usermod -u 1001 -g 1001 node \
  && addgroup --gid 1000 app \
  && adduser --disabled-password \
      --gecos '' \
      --ingroup app \
      --home /app \
      --uid 1000 \
      app

USER app
WORKDIR /app
COPY --chown=app:app package*.json ./
COPY --chown=app:app app app
COPY --chown=app:app common common
COPY --chown=app:app public/locales public/locales
COPY --chown=app:app server server
COPY --chown=app:app --from=build /app/dist dist

RUN npm ci --production && npm cache clean --force \
  && mkdir -p /app/.config/configstore \
  && ln -s dist/version.json version.json

ENV PORT=1234
EXPOSE ${PORT}
CMD ["node", "server/bin/prod.js"]
